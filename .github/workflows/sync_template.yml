name: Sync GitHub Template

on:
  workflow_dispatch:

permissions:
  checks: write
  id-token: write
  contents: write
  pull-requests: write

env:
  work_branch: sync-template-work

jobs:
  sync-template:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout branch
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Create & Checkout local branch
        run: |
          git branch ${{ env.work_branch }}
          git checkout ${{ env.work_branch }}

      - name: Checkout branch
        uses: actions/checkout@v4
        with:
          repository: Eisuke-Umeda/template_sync_main
          ref: main
          token: ${{ secrets.GH_TOKEN }}
          path: .tmp/
          sparse-checkout: |
            .github/ISSUE_TEMPLATE
            .github/PULL_REQUEST_TEMPLATE.md

      - name: Replace template
        run: |
          rm -rf .github/ISSUE_TEMPLATE .github/PULL_REQUEST_TEMPLATE.md
          cp -pr .tmp/.github/ISSUE_TEMPLATE .github/
          cp -pr .tmp/.github/PULL_REQUEST_TEMPLATE.md .github/
          rm -rf .tmp

      - name: Check Diff
        id: check_diff
        run: |
          git add -N .
          git diff --name-only --exit-code
        continue-on-error: true

      - name: Commit & Push
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git commit -m "Auto sync GitHub templates" -a
        if:
          steps.check_diff.outcome == 'failure'

      - name: Push Changes
        run: |
          git push --set-upstream origin ${{ env.work_branch }}
        if:
          steps.check_diff.outcome == 'failure'

      - name: Create Pull Request
        id: create-pull-request
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          PULL_REQUEST_URI=$(gh pr create -B main -t 'Auto sync GitHub templates' -b '')

      - name: Approve Pull Request
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh pr review ${{steps.create-pull-request.outputs.PULL_REQUEST_URI}} --approve

      - name: Merge Pull Request
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh pr merge ${{steps.create-pull-request.outputs.PULL_REQUEST_URI}} --merge

